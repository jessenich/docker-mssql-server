# Copyright (c) 2021 Jesse N. <jesse@keplerdev.com>
# This work is licensed under the terms of the MIT license. For a copy, see <https://opensource.org/licenses/MIT>.

name: "Publish Docker Image"

on:
  push:
    tags:
      - "v*"

env:
  DOCKERHUB_LIBRARY: jessenich91
  DOCKERHUB_REPO: mssql-server
  GHCR_URI: ghcr.io
  LABELS: |
    maintainer=Jesse N. <jesse@keplerdev.com>

jobs:
  build-docker-image:
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        sql-variant: [ "2019" ]

    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GHCR_URI }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Docker Metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            "${{ env.DOCKERHUB_LIBRARY }}/${{ env.DOCKERHUB_REPO }}"
            "${{ env.GHCR_URI }}/${{ github.actor }}/${{ env.DOCKERHUB_REPO }}"
          tags: |
            type=raw,enable=${{ contains(matrix.sql-variant, '2019') }},priority=100,value=latest
            type=semver,enable=true,pattern={{major}}.{{minor}}.{{patch}}-${{ matrix.sql-variant }}latest
            type=semver,enable=true,pattern={{major}}.{{minor}}-${{ matrix.sql-variant }}latest
          labels: ${{ env.LABELS }}

      - name: Build & Push Latest
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          labels: "${{ steps.meta.outputs.labels }}"
          build-args: "VARIANT=${{ matrix.sql-variant }}-latest"
          push: true
          tags: "${{ steps.meta.outputs.tags }}"
